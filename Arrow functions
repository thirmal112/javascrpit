Function
Arrow Functions:
--ES6
---more readable and more structure
--annonomous functions (lamda functions)
--without function name but they are assigned to a variable

Let c=(){
Console.log(“hi raj”)
}
C()


Arrow function with one argument
Without using paranthesis
<script>
            let greet = x=> console.log(x);
            greet('hello')
        </script>
</body>  

Synchronous Functions
•	Definition: Functions that execute code sequentially, line by line. One task must complete before the next one begins.
In programming, asynchronous functions and synchronous functions differ primarily in how they handle operations that might take time, such as fetching data from a server, reading from a file, or waiting for user input.
________________________________________
Synchronous Functions
•	Definition: Functions that execute code sequentially, line by line. One task must complete before the next one begins.

Asynchronous Functions
•	Definition: Functions that allow certain operations to run in the background, enabling other tasks to proceed without waiting for those operations to complete.
Asynchronous functions:
ASynchronous functions is used  to multiple tasks at a time
console.log("hi thirmal")
setTimeout(()=>{
  console.log("hi i am waiting")
},5000);
console.log("i am in lab")




javaScript callbacks:
A call back function is afunction that a passed argument to another function;
#functions
#oops
#file handling
#multitasking

Promise:
Three states :
1)pending: --still not completed – continuing
2)fulfilled == task completed
3)rejected ==the operation is failed

Ex:
 let mypromise=new Promise((resolve,reject)=>
  {
    let success=true;
    if(success){
      resolve("task completed");
      }else{
        reject("task failed");
      }
  })

 /*let c=()=>{
            console.log("Hello, Raj!");
            document.write("Hello, Raj!<br>");
            }
            c()
            
            let x=(x,y)=>{
              console.log("Sum of two numbers is: "+(x+y));
              document.write("Sum of two numbers is: "+(x+y)+"<br>");
            }
            x(20 ,30)
            x(40 ,50)

            let greet=x=>console.log(x);  
            greet(`Hello`)

            let greets=()=>console.log("Hii");  
            greets()


//let age = 17; //o/p Hi Thirmal
//let age = 18; //o/p Hi Raj
let age = 19; //o/p Hi Raj
let welcome = (age < 18)? 
() => console.log(`Hi Thirmal`):
() => console.log(`Hi Raj`);
welcome();



function task1(){
  console.log("Task1: start1")
}

function task2(){
  console.log("Task2: start2")
}

function task3(){
  console.log("Task3: start3")
}

task1()
task2()
task3()

console.log("hi thirmal")
setTimeout(()=>{
  console.log("hi i am waiting")
},5000);
console.log("i am in lab")

function greetss(name,callback){
  console.log(`Hello, ${name}!`);
  callback();
}
function bye(){
  console.log("goodbye");
  }
  greetss("thirmal",bye)*/

  let mypromise=new Promise((resolve,reject)=>
  {
    let success=true;
    if(success){
      resolve("task completed");
      }else{
        reject("task failed");
      }
  })
  mypromise.then((message)=>
  {
    console.log(message);
    })


