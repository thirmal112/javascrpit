React Hooks:
--introduced on react 16.8 version
= to manage state and life cycle features in functional components
State: is an essential part in react because it allows components to be dynamic ,interactive and capable of responding to user input or chage over time
1)usestatehook:  usestate allows you to add state to functional commponents
Syntax:
Const[[state,setstate]=usestate(intial value)
State: this is current state
Setstateâ€”this is function to update the state
Intial value :
#buutton #onclick
#static #remains same
import React from 'react';
import './App.css';
//import Welcome1 from './components/welcome1';
//import Greeting from './components/greet';
//import FruitsList from './components/fruits';
import Counter from './components/count';
function App() {

  return (
   
    <div>
      <Counter></Counter>
    </div>
    
  );
};
export default App;

      import React, { useState } from "react";

const Counter = () => {
    const[count, setCount] = useState(0);

    return (
        <div>
           
           <h2>Counter value: <b>{count}</b></h2>
            <button onClick={() => setCount(count+1)}>Increment</button>
            <button onClick={() => setCount(count-1)}>Decrement</button>
            
        </div>
    );
};

export default Counter;
      import React, { useState } from "react";

//counter component

const ThemeToggler=()=>{
  const [theme,setTheme] = useState('light')

  const toggleTheme = () =>{
    setTheme(prevTheme=>(prevTheme == 'light' ? 'dark' : 'light'))
  }

  return(
    <div style={{backgroundColor:theme=='light'?'white':'black' , color:theme=='light'? 'black':'white' ,textAlign:'center'}}>
      <h1>The Current theme is {theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>
    </div>
  )

}
export default ThemeToggler;
